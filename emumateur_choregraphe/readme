# Émulateur Choregraphe pour QiOS 2.9

version Alpha 0.0.1

Ce projet permet d’utiliser partiellement **Choregraphe** (jusqu’à la version 2.8.8) avec un robot sous **QiOS 2.9**, en reproduisant certaines fonctionnalités via des outils Python.
Vous avez besoin d'un accès distant SSH ou Telnet, ou micro usb ( dans la tete )  pour lancer les commandes python

⚠️ **Statut actuel :**  
Seules les boîtes **Animation** et **Say** sont prises en charge.

---

## Fonctionnement

Le système propose deux modules principaux pour exécuter des animations et un troisième en PoC.

### 1. `qianim_player.py`
- Exécute localement des animations au format **`.qianim`**.  
- Ces animations ont été conçues à l’origine dans **Android Studio**.

### 2. `xar_player.py`
- Permet de lire des animations créées avec Choregraphe au format **`.xar`** (testé avec Choregraphe 2.8.8).  
- Prend aussi en charge les fichiers **`.crg`** pour la gestion de l’**audio**.

### 3. `choregraphe_server.py` *(PoC)*
- Prototype de **wrapper Python** interceptant les requêtes de Choregraphe.  
- Pour l’instant, il **fait seulement croire à Choregraphe que le robot est connecté**, sans exécuter de vraies commandes.  
- Sert de base pour une future compatibilité avec QiOS 2.9 et ses nouvelles méthodes.  
- **Connexion par défaut sur le port 9999.**

---

## Limitations actuelles

- ✅ Lecture d’animations (`.qianim`, `.xar`, `.crg`)
- ✅ Support de la boîte **Say**
- ❌ Pas de support des autres boîtes Choregraphe
- ❌ Pas de gestion avancée des événements ou des comportements complexes
- ❌ Le serveur Choregraphe est uniquement un **PoC**

---

## Installation & Utilisation

```bash
# Exécuter une animation qianim
python qianim_player.py chemin/vers/animation.qianim

# Exécuter une animation xar ou crg
python xar_player.py chemin/vers/animation.xar
python xar_player.py chemin/vers/animation.crg

# (optionnel) Lancer le serveur PoC
python choregraphe_server.py  # connexion sur port 9999
